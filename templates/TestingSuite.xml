<templateSet group="TestingSuite">
  <template name="gsfp" value="public static ProviderTestingSuite&lt;$ENTITY_TYPE$, $DTO_TYPE$&gt; getSuiteFor$PROVIDER_NAME$($PROVIDER_TYPE$ $PROVIDER_INST$){&#10;    $DTO_TYPE$ $DTO_TEMPLATE$ = new $DTO_TYPE$()&#10;            .setId(1);&#10;    $ENTITY_TYPE$ $ENTITY_TEMPLATE$ = new $ENTITY_TYPE$()&#10;            .setId(1);&#10;            $END$&#10;    return new ProviderTestingSuite&lt;&gt;($ENTITY_TEMPLATE$, $DTO_TEMPLATE$);&#10;}" description="Get Suite For Provider" toReformat="false" toShortenFQNames="true">
    <variable name="PROVIDER_TYPE" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="PROVIDER_NAME" expression="" defaultValue="PROVIDER_TYPE" alwaysStopAt="false" />
    <variable name="ENTITY_TYPE" expression="expectedType()" defaultValue="" alwaysStopAt="true" />
    <variable name="DTO_TYPE" expression="expectedType()" defaultValue="" alwaysStopAt="true" />
    <variable name="DTO_TEMPLATE" expression="concat(camelCase(DTO_TYPE), &quot;DtoTemplate&quot;)" defaultValue="" alwaysStopAt="false" />
    <variable name="PROVIDER_INST" expression="camelCase(PROVIDER_NAME)" defaultValue="" alwaysStopAt="false" />
    <variable name="ENTITY_TEMPLATE" expression="concat(camelCase(ENTITY_TYPE), &quot;Template&quot;)" defaultValue="" alwaysStopAt="false" />
    <context>
      <option name="JAVA_CODE" value="true" />
      <option name="JAVA_COMMENT" value="false" />
      <option name="JAVA_STRING" value="false" />
    </context>
  </template>
  <template name="gsfc" value="public static ConverterTestingSuite&lt;$ENTITY_TYPE$, $DTO_TYPE$&gt; getSuiteFor$PROVIDER_NAME$($PROVIDER_TYPE$ $PROVIDER_INST$){&#10;    $DTO_TYPE$ $DTO_TEMPLATE$ = new $DTO_TYPE$()&#10;            .setId(1);&#10;    $ENTITY_TYPE$ $ENTITY_TEMPLATE$ = new $ENTITY_TYPE$()&#10;            .setId(1);&#10;            $END$&#10;    return new ConverterTestingSuite&lt;&gt;($ENTITY_TEMPLATE$, $DTO_TEMPLATE$, $1$, $2$);&#10;}" description="Get Suite For Converter" toReformat="false" toShortenFQNames="true">
    <variable name="PROVIDER_TYPE" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="PROVIDER_NAME" expression="" defaultValue="PROVIDER_TYPE" alwaysStopAt="false" />
    <variable name="ENTITY_TYPE" expression="expectedType()" defaultValue="" alwaysStopAt="true" />
    <variable name="DTO_TYPE" expression="expectedType()" defaultValue="" alwaysStopAt="true" />
    <variable name="DTO_TEMPLATE" expression="concat(camelCase(DTO_TYPE), &quot;DtoTemplate&quot;)" defaultValue="" alwaysStopAt="false" />
    <variable name="PROVIDER_INST" expression="camelCase(PROVIDER_NAME)" defaultValue="" alwaysStopAt="false" />
    <variable name="ENTITY_TEMPLATE" expression="concat(camelCase(ENTITY_TYPE), &quot;Template&quot;)" defaultValue="" alwaysStopAt="false" />
    <variable name="1" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="2" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_CODE" value="true" />
      <option name="JAVA_COMMENT" value="false" />
      <option name="JAVA_STRING" value="false" />
    </context>
  </template>
  <template name="cct" value="import org.junit.Before;&#10;import org.junit.Test;&#10;import org.junit.runner.RunWith;&#10;import org.mockito.InjectMocks;&#10;import org.mockito.MockitoAnnotations;&#10;import org.springframework.boot.test.context.SpringBootTest;&#10;import org.springframework.test.context.ActiveProfiles;&#10;import org.springframework.test.context.junit4.SpringRunner;&#10;&#10;&#10;@RunWith(SpringRunner.class)&#10;@SpringBootTest&#10;@ActiveProfiles(&quot;test&quot;)&#10;public class $TEST_CLASS$ {&#10;&#10;    @InjectMocks&#10;    private $CONVERTER_CLASS$ $CONVERTER_FIELD$; &#10;    &#10;    @Before&#10;    public void initMock(){&#10;        MockitoAnnotations.initMocks(this);&#10;        &#10;    }&#10;    &#10;    @Test&#10;    public void convertDtoToEntityTest(){&#10;        $END$&#10;    }&#10;}" description="Create Converter test" toReformat="true" toShortenFQNames="true" useStaticImport="true">
    <variable name="TEST_CLASS" expression="fileNameWithoutExtension()" defaultValue="" alwaysStopAt="false" />
    <variable name="CONVERTER_CLASS" expression="className()" defaultValue="" alwaysStopAt="true" />
    <variable name="CONVERTER_FIELD" expression="camelCase(CONVERTER_CLASS)" defaultValue="" alwaysStopAt="false" />
    <context>
      <option name="JAVA_CODE" value="true" />
    </context>
  </template>
  <template name="tm" value="@Test&#10;public void $ANY$Test(){&#10;    // Arrange&#10;    $END$&#10;    &#10;    // Act&#10;    &#10;    // Assert&#10;    &#10;    assertThat();&#10;}" description="Test Method" toReformat="false" toShortenFQNames="true" useStaticImport="true">
    <variable name="ANY" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_CODE" value="true" />
    </context>
  </template>
</templateSet>